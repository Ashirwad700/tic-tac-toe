#include<iostream>
using namespace std;

// for the layout of the tic-tac-toe board
void drawBoard(char board[3][3]){
    cout<<"---------------\n";
    for(int i=0;i<3;i++){
        cout<<" | ";
        for(int j=0;j<3;j++){
            cout<<board[i][j]<<" | ";
        }
        cout<<"\n---------------\n";
    }
}

// function to check for a win

bool checkWin(char board[3][3], char player){
    for(int i=0;i<3;i++){
        //checking rows
        if(board[i][0]== player && board[i][1]==player && board[i][2]==player){
            return true;
        }
        //checking columns
        if(board[0][0]==player && board[1][i] == player && board[2][i] == player){
            return true;
        }
        
    }
    // checking diagonals
    if(board[0][0] == player && board[1][1]==player && board[2][2]==player){
        return true;
    }
    
    if(board[0][2]==player && board[1][1]==player && board[2][0]==player){
        return true;
    }
    return false;
    
}

//main game function
int main(){

    //initializing the board and player
    char board[3][3] = {{' ',' ',' '},
                        {' ',' ',' '},
                        {' ',' ',' '} };
    

    char player = 'X';
    int row,col;
    int turn;

    cout<<"welcome to Tic-Tac-Toe!\n";
    //game loop
    for(turn = 0;turn<9;turn++){
        // draw the board
        drawBoard(board);

        while(true){
            cout<<"Player "<<player<<", enter row and col.(0-2):";
            cin>>row>>col;
            if(board[row][col] != ' ' || row<0 || row>2 || col<0 || col>2){
                cout<<"Invalid move.Try again.\n";
            }
            else{
                break;
            }


        }
        // make the move
        board[row][col]= player;
        //check for a win after making a move
        if(checkWin(board,player)){
            drawBoard(board);
            cout<<"Player"<<player<<" wins!\n";
            break;
        }
        player = (player == 'X') ? 'O':'X';
    }
    drawBoard(board);
    if(turn ==9 && !checkWin(board,'X') && !checkWin(board,'O')){
        cout<<"It's a draw!\n";
    }
    return 0;
}
